{"version":3,"sources":["components/Title/index.js","pages/Home/index.js","components/Button/index.js","pages/Pictures/index.js","pages/NotFound/index.js","pages/Facts/index.js","App.js","reportWebVitals.js","index.js"],"names":["Title","props","className","children","defaultProps","title","Home","Button","onClick","handleClick","buttonText","Pictures","NotFound","navigate","Facts","React","useState","facts","setFacts","useEffect","fetch","then","res","json","fact","App","to","path","default","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAIMA,EAAQ,SAACC,GAAD,OAAW,oBAAIC,UAAU,QAAd,SAAuBD,EAAME,YAQtDH,EAAMI,aAAe,CACnBC,MAAO,YAGML,QCHEM,EATJ,WAET,OACE,qBAAKJ,UAAU,OAAf,SACI,cAAC,EAAD,8BCJJK,G,MAAS,SAACN,GACd,OACE,wBAAQO,QAASP,EAAMQ,YAAaP,UAAU,MAA9C,SACGD,EAAMS,eASbH,EAAOH,aAAe,CACpBM,WAAY,oBAGCH,QCNAI,G,MARE,SAACV,GAChB,OACE,qBAAKC,UAAU,iBAAf,SACE,cAAC,EAAD,6BCOSU,G,MAVE,SAACX,GAChB,OACE,sBAAKC,UAAU,iBAAf,UACE,qCACA,0FACA,cAAC,EAAD,CAAQO,YAAa,kBAAMI,YAAS,MAAMH,WAAW,iB,OCmB5CI,G,MAxBD,WAAO,IAAD,EAEMC,IAAMC,SAAS,IAFrB,mBAEbC,EAFa,KAENC,EAFM,KAelB,OAXAH,IAAMI,WAAU,WACdC,MAAM,kCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAELL,EAASK,EAAK,GAAGC,WAIpB,IAGD,sBAAKtB,UAAU,iBAAf,UACE,cAAC,EAAD,0BACA,+BAAOe,SCYEQ,MArBf,WACE,OACF,qCACI,sBAAKvB,UAAU,MAAf,UACA,cAAC,IAAD,CAAMwB,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,sBACA,cAAC,IAAD,CAAMA,GAAG,QAAT,sBAEA,qBAAKxB,UAAU,MAAf,SACA,eAAC,IAAD,WACM,cAAC,EAAD,CAAMyB,KAAK,MACX,cAAC,EAAD,CAAUA,KAAK,cACf,cAAC,EAAD,CAAOA,KAAK,WACZ,cAAC,EAAD,CAAUC,SAAO,aChBZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a5cafc46.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\n\nconst Title = (props) => <h3 className=\"title\">{props.children}</h3>;\n\n// Set which props this component takes\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\n// Set default props in case no props were passed to the component\nTitle.defaultProps = {\n  title: \"Welcome?\",\n};\n\nexport default Title;","import React from \"react\";\nimport { Redirect } from \"@reach/router\";\nimport Title from \"../../components/Title\";\n\nconst Home = () => {\n   \n    return (\n      <div className=\"home\">\n          <Title>Welcome home</Title>\n      </div>\n    );\n  };\n  \n  export default Home;\n  ","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.handleClick} className=\"btn\">\n      {props.buttonText}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  buttonText: PropTypes.string,\n};\n\nButton.defaultProps = {\n  buttonText: \"wanna see a dog?\",\n};\n\nexport default Button;","import React from \"react\";\nimport { navigate } from \"@reach/router\";\nimport Button from \"../../components/Button\";\nimport \"./index.css\";\nimport Title from \"../../components/Title\";\n\nconst Pictures = (props) => {\n  return (\n    <div className=\"not-found-view\">\n      <Title>Hello pics</Title>\n    </div>\n  );\n};\n\nexport default Pictures;","import React from \"react\";\nimport { Redirect } from \"@reach/router\";\nimport { navigate } from \"@reach/router\";\nimport Button from \"./../../components/Button\";\nimport \"./index.css\";\n\nconst NotFound = (props) => {\n  return (\n    <div className=\"not-found-view\">\n      <h1>404</h1>\n      <p>Oh, something went wrong! Please go back to the home page</p>\n      <Button handleClick={() => navigate(\"/\")} buttonText=\"Go back\" />\n    </div>\n  );\n};\n\nexport default NotFound;","import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport Button from \"../../components/Button\";\nimport \"./index.css\";\nimport Title from \"../../components/Title\";\n\nconst Facts = () => {\n\nconst [facts, setFacts] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(\"api/v1/resources/dogs?number=1\")\n      .then((res) => res.json())\n      .then((json) => {\n    \n        setFacts(json[0].fact);\n        //console.log(json);\n        \n      });\n  }, []); \n\n  return (\n    <div className=\"not-found-view\">\n      <Title>Hello facts</Title>\n      <span>{facts}</span>\n    </div>\n    \n  );\n};\n\nexport default Facts;","import React from \"react\";\nimport \"./index.css\";\nimport { Router, Link } from \"@reach/router\";\n\n//components\nimport Title from './components/Title';\n\n\n//pages\nimport Home from \"./pages/Home\";\nimport Pictures from \"./pages/Pictures\";\nimport NotFound from \"./pages/NotFound\";\nimport Facts from \"./pages/Facts\";\n\n\nfunction App() {\n  return (\n<>\n    <nav className=\"nav\">\n    <Link to=\"/\">Home</Link>\n    <Link to=\"pictures\">Pictures</Link>\n    <Link to=\"facts\">Facts</Link>\n  </nav>\n    <div className=\"App\">\n    <Router>\n          <Home path=\"/\" />\n          <Pictures path=\"/pictures\" />\n          <Facts path=\"/facts\" />\n          <NotFound default />\n        </Router>\n    </div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}